<!-- ProductoDetalles.razor -->
@page "/ProductoDetalles/{id:int}"
@using SubastaMaestra.Models.DTOs.Auction
@using SubastaMaestra.Models.DTOs.Product
@using SubastaMaestra.WebSite.Services
@using SubastaMaestra.Entities.Enums
@using SubastaMaestra.WebSite.wwwroot.Components

@inject IProductService _productService;

<div class="container mt-4">
    @if (Product == null)
    {
        <div class="alert alert-danger" role="alert">Producto no encontrado</div>
    }
    else if (!ProductFound)
    {
        <div class="alert alert-warning" role="alert">No se encontró el producto.</div>
    }
    else
    {
        <!-- Tarjeta de detalles del producto -->
        <div class="card mb-4 shadow-sm">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@Product.ImgUrl" alt="@Product.Name" class="img-fluid rounded-start" style="width:100%; height:auto;" />
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h3 class="card-title">@Product.Name</h3>
                        <p class="card-text"><strong>Condición:</strong> @(Product.Condition == 0 ? "Nuevo" : "Usado")</p>
                        <p class="card-text"><strong>Precio Base:</strong> $@Product.InitialPrice</p>
                        @if (Product.FinalPrice > 0)
                        {
                            <p class="card-text"><strong>Precio Final:</strong> $@Product.FinalPrice</p>
                        }
                        <p class="card-text"><strong>Descripción:</strong> @Product.Description</p>
                        
                        <p class="card-text"><strong>Ofertas:</strong> @Product.NumberOfOffers</p>
                        <p class="card-text"><strong>Modo de entrega:</strong> @(Product.DeliveryCondition == 0 ? "Pick-up" : "Delivery")</p>

                        @if (Product.CurrentState.ToString() == "Active" )
                        {
                            <AuthorizeView>
                                <Authorized>
                                    <button class="btn btn-primary mt-3" @onclick="OpenBidModal">Ofertar</button>
                                </Authorized>
                                <NotAuthorized>
                                        <div class="nav-item">
                                            <NavLink class="btn btn-outline-primary btn-sm" href="login">
                                                <i class="bi bi-box-arrow-in-right me-1"></i> Inicia sesión para ofertar
                                            </NavLink>
                                        </div>
                                </NotAuthorized>
                            </AuthorizeView>
                            
                        }
                        else
                        {
                            <div class="alert alert-info mt-3" role="alert">
                                Este producto no está disponible para ofertar en este momento.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (IsBidModalOpen)
{
    <BidModal ProductId="@Product.Id" OnBidPlaced="HandleBidPlaced" OnClose="CloseBidModal" />
}

@code {
    [Parameter]
    public int Id { get; set; }

    private ProductDTO Product { get; set; }
    private bool ProductFound { get; set; } = true;
    private bool IsBidModalOpen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Product = await _productService.GetProductByIdAsync(Id);
            if (Product == null)
            {
                ProductFound = false;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al cargar el producto: " + ex.Message);
            ProductFound = false;
        }
    }

    private void OpenBidModal()
    {
        IsBidModalOpen = true;
    }

    private void CloseBidModal(bool bidPlaced)
    {
        IsBidModalOpen = false;

        if (bidPlaced)
        {
            // Lógica adicional, como recargar datos del producto o mostrar un mensaje de éxito.
        }
    }

    private void HandleBidPlaced()
    {
        // Aquí puedes actualizar el número de ofertas o cualquier otro detalle relevante.
    }
}
