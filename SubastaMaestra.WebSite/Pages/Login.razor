@page "/login"

@using Microsoft.AspNetCore.Components.Authorization
@using SubastaMaestra.WebSite.Services;
@using SubastaMaestra.Models.DTOs.User;
@inject AuthenticationService AuthService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow-lg p-4" style="width: 22rem;">
        <h2 class="text-center mb-4">Iniciar Sesión</h2>
        
        <EditForm Model="user" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger" />

            <div class="form-group mb-3">
                <label for="username" class="form-label">Correo Electrónico</label>
                <InputText id="username" class="form-control" @bind-Value="user.Email" placeholder="Ingresa tu correo electrónico" />
            </div>

            <div class="form-group mb-3">
                <label for="password" class="form-label">Contraseña</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="user.Password" placeholder="Ingresa tu contraseña" />
            </div>

            <div class="form-group mb-3">
                Aun no estas registrado?,
            <NavLink href="registro">
                <i class="bi bi-pencil-square me-1"></i> Registrarse
            </NavLink>
            </div>
            <button type="submit" class="btn btn-purple w-100 mt-3">Iniciar Sesión</button>
        </EditForm>
    </div>
</div>
<style>

    .btn-purple {
        color: #fff;
        background-color: #8901CF;
        border-color: #8901CF;
    }
</style>


@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? returnUrl { get; set; }
    private LoginRequestDTO user = new LoginRequestDTO();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);

        if (result)
        {
            // Redirige a la vista principal
            // Navigation.NavigateTo("/");
            Navigation.NavigateTo(returnUrl ?? "/"); // Redirigir al returnUrl o a la raíz
        }
        else
        {
            ErrorMessage = "Error login";
        }
    }

}